/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        layer_init {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_procreate_1 {
            bindings = <
&lt 5 ESC  &kp BACKSPACE  &kp LG(NUMBER_0)  &kp LG(K)  &kp LEFT_WIN      &kp LEFT_SHIFT     &kp LEFT_ALT     &trans  &trans  &trans  &trans  &trans  &trans  &trans
           &kp A          &kp LG(J)         &kp L      &kp S             &kp E              &kp B            &trans  &trans  &trans  &trans  &trans  &trans
           &kp Z          &kp X             &kp C      &kp V             &kp LG(Z)          &kp LG(LS(Z))    &trans  &trans  &trans  &trans  &trans  &trans
                                                       &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SPACE        &trans  &trans  &trans
            >;
        };

        layer_procreate_2 {
            bindings = <
&lt 5 ESC  &kp LG(BACKSPACE)  &kp LG(U)     &kp LG(SEMICOLON)  &kp L      &kp LG(NUMBER_0)  &kp LG(U)            &trans  &trans  &trans  &trans  &trans  &trans  &trans
           &kp LSHIFT         &kp LG(J)     &kp X              &kp S      &kp B             &kp RIGHT_BRACKET    &trans  &trans  &trans  &trans  &trans  &trans
           &kp LEFT_COMMAND   &kp LEFT_ALT  &kp C              &kp V      &kp E             &kp LEFT_BRACKET     &trans  &trans  &trans  &trans  &trans  &trans
                                                               &kp LG(Z)  &kp LG(LS(Z))     &mt SPACE RETURN     &trans  &trans  &trans
            >;
        };

        layer_procreate_3 {
            bindings = <
&lt 5 ESC  &kp LG(BACKSPACE)  &kp LG(U)      &kp LG(SEMICOLON)  &kp L             &kp LG(NUMBER_0)  &kp LG(U)            &trans  &trans  &trans  &trans  &trans  &trans  &trans
           &kp LSHIFT         &kp LG(J)      &kp X              &kp E             &kp B             &kp RIGHT_BRACKET    &trans  &trans  &trans  &trans  &trans  &trans
           &kp LG(Z)          &kp LG(LS(Z))  &kp C              &kp V             &kp S             &kp LEFT_BRACKET     &trans  &trans  &trans  &trans  &trans  &trans
                                                                &kp LEFT_COMMAND  &kp LEFT_ALT      &mt SPACE RETURN     &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_adjust {
            bindings = <
&none  &bootloader  &sys_reset    &tog 4        &tog 3        &tog 2        &tog 1          &none         &none         &none         &none         &none         &bootloader  &sys_reset
       &bt BT_CLR   &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
       &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
                                                &trans        &none         &trans          &trans        &none         &trans
            >;
        };
    };
};
